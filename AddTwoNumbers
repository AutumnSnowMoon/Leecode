/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */

#use the linked list to realize the big number addition

class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {  
        ListNode *ans = new ListNode(0);
        ListNode *tail = ans;
		
	
        int isopsephy = 0;

        while (l1 != NULL || l2 != NULL) {
    

            int value1 = l1 == NULL ? 0:l1->val;
            int value2 = l2 == NULL ? 0:l2->val;

            int val = value1 + value2 + isopsephy;

            if (val > 9) {
    
                val = val % 10;
                isopsephy = 1;

            }else {
    
                isopsephy = 0;
            }

            tail->val = val;

            l1 = l1 == NULL? NULL: l1->next;
            l2 = l2 == NULL? NULL: l2->next;
             
            if (l1 == NULL && l2 == NULL) {
    
                if (isopsephy > 0) {
    
                    tail->next = new ListNode(1);
                    tail = tail->next;
                }
                break;
            }
            
            tail->next = new ListNode(0);
            tail = tail->next;

        }

        return ans;
    }
};
